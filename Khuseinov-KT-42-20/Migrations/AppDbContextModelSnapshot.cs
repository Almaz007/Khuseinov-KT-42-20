// <auto-generated />
using System;
using Khuseinov_KT_42_20.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Khuseinov_KT_42_20.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Khuseinov_KT_42_20.Models.AcademicDegree", b =>
                {
                    b.Property<int>("AcademicDegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("academicDegree_id")
                        .HasComment("Идентификатор записи для ученой степени");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcademicDegreeId"));

                    b.Property<string>("AcademicDegreeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_AcademicDegreeName")
                        .HasComment("Название ученой степени");

                    b.HasKey("AcademicDegreeId")
                        .HasName("pk_cd_academicDegree_academicDegree_id");

                    b.ToTable("AcademicDegrees");
                });

            modelBuilder.Entity("Khuseinov_KT_42_20.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("department_id")
                        .HasComment("Идентификатор записи для кафедры");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<DateTime>("DateFoundation")
                        .HasColumnType("DateTime")
                        .HasColumnName("c_department_DateFoundation")
                        .HasComment("Дата основания кафедры");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_DepartmentName")
                        .HasComment("Имя Кафедры");

                    b.Property<int>("TeacherCount")
                        .HasColumnType("int")
                        .HasColumnName("c_department_TeacherCount")
                        .HasComment("Кол-во преподователей в кафедре");

                    b.HasKey("DepartmentId")
                        .HasName("pk_cd_department_department_id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Khuseinov_KT_42_20.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("teacher_id")
                        .HasComment("Идентификатор записи преподователя");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<int>("AcademicDegreeId")
                        .HasColumnType("int")
                        .HasColumnName("c_teacher_AcademicDegreeId")
                        .HasComment("Внешний ключ на ученую ступень");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("c_teacher_DepartmentId")
                        .HasComment("Внешний ключ на Кафедру");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_teacher_FirstName")
                        .HasComment("Имя преподователя");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_teacher_LastName")
                        .HasComment("Фамилия преподователя");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("c_teacher_MiddleName")
                        .HasComment("Отчество преподователя");

                    b.HasKey("TeacherId")
                        .HasName("pk_cd_teacher_teacher_id");

                    b.HasIndex("AcademicDegreeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("cd_teacher", (string)null);
                });

            modelBuilder.Entity("Khuseinov_KT_42_20.Models.Teacher", b =>
                {
                    b.HasOne("Khuseinov_KT_42_20.Models.AcademicDegree", "AcademicDegree")
                        .WithMany("Teachers")
                        .HasForeignKey("AcademicDegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_academicDegree_id");

                    b.HasOne("Khuseinov_KT_42_20.Models.Department", "Department")
                        .WithMany("Teachers")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_department_id");

                    b.Navigation("AcademicDegree");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Khuseinov_KT_42_20.Models.AcademicDegree", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("Khuseinov_KT_42_20.Models.Department", b =>
                {
                    b.Navigation("Teachers");
                });
#pragma warning restore 612, 618
        }
    }
}
